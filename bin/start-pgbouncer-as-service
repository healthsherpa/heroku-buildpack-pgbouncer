#!/usr/bin/env bash
# vim: ft=bash

set +e

export PGBOUNCER_PROCESS_REGEX="[v]endor/pgbouncer/bin/pgbouncer"
export PGBOUNCER_BUILD_PACK_PID

function inf() {
  echo -e "INFO:  $* "
}

function err() {
   echo -e "ERROR: $* "
}

function is-enabled() {
  ( shopt -s extglob nocasematch
    [[ $1 == @(1|true|yes|on) ]]
  )
}

function pgbouncer-current-pid() {
  /bin/ps -eopid,args | grep -E "${PGBOUNCER_PROCESS_REGEX}" | awk '{print $1}'
}

function is-pgbouncer-running() {
  local current_pid
  current_pid=$(pgbouncer-current-pid)

  [[ -n ${current_pid} && ${current_pid} -gt 0 ]] && {
    inf "pgbouncer-is-running: pid=${current_pid}"
    return 0
  }

  inf "pgbouncer-is-not-running"
  return 1
}

function is-pgbouncer-service-enabled() {
  if ! is-enabled "${PGBOUNCER_ENABLED}"; then
    inf "pgbouncer-is-disabled"
    return 1
  fi
  return 0
}

function main() {
  # Do not start the service if PgBouncer is not enabled
  is-pgbouncer-service-enabled || return 1

  local stderr
  stderr="$(mktemp)"

  # Start PgBouncer process in the background
  [[ -x bin/start-pgbouncer ]] && bin/start-pgbouncer /bin/bash -c "while true; do sleep 10000; done" 2>"${stderr}" &

  sleep 1

  # PgBouncer should be running now; if it isn't then return early
  is-pgbouncer-running || return 1

  PGBOUNCER_BUILD_PACK_PID=$(pgbouncer-current-pid)
  export PGBOUNCER_BUILD_PACK_PID

  if [[ -n ${PGBOUNCER_BUILD_PACK_PID} && ${PGBOUNCER_BUILD_PACK_PID} -gt 0 ]] ; then
    set +e
    mkdir -p tmp/pids || true
    echo "${PGBOUNCER_BUILD_PACK_PID}" > tmp/pids/pgbouncer.pid
    inf "pgbouncer-started-ok-pid-s${PGBOUNCER_BUILD_PACK_PID}"
    return 0
  else
    err "pgbouncer-failed-to-start"
    [[ -s ${stderr} ]] && {
      err "pgbouncer-stderr:"
      cat "${stderr}"
      rm -f "${stderr}"
    }
    return 1
  fi
}

[[ "$0" != "${BASH_SOURCE[0]}" ]] || main "$@"
